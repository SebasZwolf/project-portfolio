---
import Layout from "../layouts/Layout.astro";
import Grid from "../layouts/Grid.astro";

import Icons from "../fragments/Icons.astro";

import { TimeLine } from "../components/react/TimeLine";
import IconList from "../components/vue/IconList.vue";

import { getCollection } from 'astro:content';
import { Image } from "astro:assets";

import PhotoImg from '../assets/creator/profile.webp';
import ProfileIcon from '../assets/creator/photo.jpg';

import { icons } from '../util/const'

const s = [
	{ id : 'experiencia', label : 'Experiencia Laboral' },
	{ id : 'proyectos', label : 'Mis Proyectos' },
	{ id : 'sobre-mi', label : 'Sobre mí' },
] satisfies Record<number, { id : string, label : string}>

const projects = await getCollection('projects').then(e => e.map(e => e.data).sort((a, b) => b.stars - a.stars));

let c = 0;
const imgAuthor = PhotoImg.src;

const
	title="Portafolio de Sebastian - Ingeniero de Sistemas y Desarrollador Web",
	description="Hola soy Sebastian y este es mi portafolio. Mira mis proyectos realizados usando CSS,JS y HTML y diferentes tecnologías como Vue, Astro, React, Tailwind, entre otros."

---

<Layout {title} {description}>
	<Grid>
		<Fragment slot="header">
			<article
				class="border-blue-400 p-2 flex flex-col items-center gap-2 max-w-2xl b mx-auto"
			>
				<header class="text-center my-3">
					<picture>
						<Image width="96" height="96" src={ProfileIcon} format="webp"
							class="w-24 block mx-auto my-2 rounded-full overflow-clip border-2 border-opacity-50 border-white p-1 mix-blend-luminosity"
							alt="avatar del desarrollador"/>
					</picture>
					<h2 class="m-0 text-xl font-semibold leading-tight">
						<span> hola, soy</span>
						<span class="text-2xl font-bold"> Sebastian</span>
					</h2>
					<p class="text-sm m-0 leading-tight text-[var(--hierarchy-1)]">
						Ingeniero de Sistemas y Desarrollador Web
					</p>
				</header>
				<div class="basis-full leading-snug text-base text-center text-balance">
					<p class="my-1">
						Entusiasta del desarrollo web, el diseño UX y las aplicaciones web.
					</p>
					<p class="my-1">
						Me especializo en el diseño y desarrollo de aplicaciones y experiencias únicas, llamativas y profesionales. 
					</p>
				</div>
			</article>
		</Fragment>

		<Fragment slot="default">
			<Icons/>
			<svg viewBox="0 0 24 24" class="hidden">
				<defs data-namespace="header-icons">
					<g id={`c-icon-header-${s[c++].id}`}
						stroke-width="0"
						stroke="none"
						fill="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round">
						<path d="M22 13.478v4.522a3 3 0 0 1 -3 3h-14a3 3 0 0 1 -3 -3v-4.522l.553 .277a20.999 20.999 0 0 0 18.897 -.002l.55 -.275zm-8 -11.478a3 3 0 0 1 3 3v1h2a3 3 0 0 1 3 3v2.242l-1.447 .724a19.002 19.002 0 0 1 -16.726 .186l-.647 -.32l-1.18 -.59v-2.242a3 3 0 0 1 3 -3h2v-1a3 3 0 0 1 3 -3h4zm-2 8a1 1 0 0 0 -1 1a1 1 0 1 0 2 .01c0 -.562 -.448 -1.01 -1 -1.01zm2 -6h-4a1 1 0 0 0 -1 1v1h6v-1a1 1 0 0 0 -1 -1z"/>
					</g>
					<g id={`c-icon-header-${s[c++].id}`}
						stroke-width="2"
						stroke="currentColor"
						fill="none"
						stroke-linecap="round"
						stroke-linejoin="round">
						<path d="M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7" />
						<path d="M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3" />
						<path d="M9.7 17l4.6 0" />
					</g>
					<g id={`c-icon-header-${s[c++].id}`}
						stroke-width="2"
						stroke="currentColor"
						fill="none"
						stroke-linecap="round"
						stroke-linejoin="round">
						<path d="M12 2a5 5 0 1 1 -5 5l.005 -.217a5 5 0 0 1 4.995 -4.783z" stroke-width="0" fill="currentColor" />
						<path d="M14 14a5 5 0 0 1 5 5v1a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-1a5 5 0 0 1 5 -5h4z" stroke-width="0" fill="currentColor" />
					</g>
				</defs>
			</svg>

			<section class="my-12 px-2">
				<h2 id={s[(c = 0)].id} class="text-2xl block my-4 font-semibold leading-none">
					<svg
						class="inline-block size-6"
						style="vertical-align: -3px;"
						viewBox="0 0 24 24">
						<use href={`#c-icon-header-${s[c].id}`}/>
					</svg>
					{ s[c++].label }
				</h2>
				
				<div class="mr-auto max-w-3xl pl-3">
					<TimeLine
						className="c-timeline-experience"
						title={{ level : 3 }}
						list={[
							{
								date: new Date("2023-10-01"),
								title: "Human Habitat Peru",
								content: [
									"Diseño, puesta en marcha y mantenimiento de sitio web de Human Habitat Perú.",
									"Se desarrolló una landing page que cumple con estandares de SEO y buenas practicas, un blog y sistema de contacto. Además, se diseño una base de datos estructurada local."
								],
								link: "https://hhpbim.com",
							}, {
								date: new Date("2024-08-01"),
								title: "MARIN & ASSOCIATES",
								content: [
									"Desarrollo de herramientas web de gestión de documentos.",
									"Se desarrollaron herramientas de gestión y manipulación de documentos.",
									"Se desarrollaron de IA para agilizar procesos y desempeñar tareas de analizis, extracción y formateo.",
									"Se implemento sistemas de búsqueda indexada para consulta de documentos.",
									"Se diseño una interfaz amigable, accesible y personalizada para el uso de las herramientas mencionadas",
								],
							}, {
								date: new Date("2024-09-01"),
								title: "Chikichi Store",
								content: [
									"Actualmente en desarrollo",
									"Desarrollo de sitio web y plataforma eCommerce.",
									"Se diseño y desarrolló una sitio web de compras y blog.",
									"Se desarrollo una plataforma de edición (administrador) para la gestión de articulos.",
									"Se diseño una experiencia de usuario amigable, accesible y personalizada.",
								],
								link : 'https://test-product-762024.netlify.app'
							}
						]}
					/>
				</div>
			</section>
			<section class="my-12 px-2">
				<h2 id={s[c].id} class="text-2xl block my-4 font-semibold leading-none">
					<svg
						class="inline-block size-6"
						style="vertical-align: -3px;"
						viewBox="0 0 24 24">
						<use href={`#c-icon-header-${s[c].id}`}/>
					</svg>
					{ s[c++].label }
				</h2>
				<ul 
					class="grid gap-2 justify-center sm:justify-start"
					style="grid-auto-rows: 1fr; grid-template-columns: repeat(auto-fit, 20rem);">
					{ projects.map(p => (<li class="h-full">
						<article class="border border-hierarchy-3 h-96 flex flex-col bg-panel my-0 dark:bg-hierarchy-3  flex-grow-0 flex-shrink-0 group rounded-md overflow-clip">

							<div class="overflow-clip relative aspect-[1.41/1] flex-shrink-1">
								
								<div class="absolute flex gap-2 p-2 -translate-y-1/2 group-hover:translate-y-0 opacity-0 group-hover:opacity-100 z-10" style="transition: opacity .3s, transform .3s;">
									{ p.link && <a class="p-1.5 rounded-full shadow-md shadow-black/40 bg-panel hover:bg-hierarchy-3 dark:bg-hierarchy-3 dark:hover:bg-hierarchy-2" target="_blank" href={p.link}>
										<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-external-link" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 6h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-6" /><path d="M11 13l9 -9" /><path d="M15 4h5v5" />
											</svg>
										</a>	}
									{ p.repo && <a class="p-1.5 rounded-full shadow-md shadow-black/40 bg-panel hover:bg-hierarchy-3 dark:bg-hierarchy-3 dark:hover:bg-hierarchy-2" target="_blank" href={p.repo}>
										<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-github" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
											</svg>
										</a>	}
								</div>
								
								<div class="size-full contain-size">
									<Image class="block object-cover size-full group-hover:opacity-50" style="transition: opacity .3s;" src={p.img} format="webp" alt={`captura/imagen de la aplicación/proyecto ${p.title}`}/>
								</div>
							</div>
							
							<footer class="px-2">
								<ul class="ul-tag-list-lite mt-3">{
									p.tags.map(t => (
									<li style={`--icon-color : ${t.color}`}>
										<svg><use href={`#c-icon-tag-${t.icon}`}/></svg>
										<div>
											<span class="text-nowrap">
												{t.label}
											</span>
										</div>
									</li>))
								}</ul>	
							</footer>
							
							<div class="leading-none text-sm px-2">
								<h3 class="text-balance text-2xl leading-tight font-semibold my-2 flex items-end min-h-[3.75rem] text-hierarchy-0">{p.title}</h3>
								
								<div class="grid overflow-hidden grid-rows-[0fr] group-hover:grid-rows-[1fr] group-hover:mb-6" style="transition: grid-template-rows .3s, margin-bottom .3s;">
									<p class="leading-tight text-hierarchy-1 overflow-hidden">{p.descr}</p>
								</div>
							</div>

						</article>
					</li>))
				}</ul>
			</section>
			<section class="my-12" data-col="total">
				<div class="max-w-[var(--max-width)] mx-auto px-2">
					<h2 id={s[c].id } class="text-2xl block my-4 font-semibold leading-none">
						<svg
							class="inline-block size-6"
							style="vertical-align: -3px;"
							viewBox="0 0 24 24">
							<use href={`#c-icon-header-${s[c].id}`}/>
						</svg>
						{ s[c++].label }
					</h2>
				</div>

				<div class="mt-12 mb-4 bg-[var(--panel-color)] px-2" style="box-shadow: 0 .125rem .75rem 0rem #4446" >
					<div
						class="max-w-[var(--max-width)] py-2 flex mx-auto items-center gap-4 flex-col mt-32 md:mt-0 md:flex-row">
						<picture class="contents">
							<img
								class="md:scale-150 w-32 -mt-20  md:my-0 md:mx-8 block rounded-full overflow-clip border-2 border-[var(--hierarchy-2)] dark:border-white"
								src={imgAuthor}
								width="112"
								height="112"
								alt="avatar del desarrollador"
							/>
						</picture>

						<div class="max-w-2xl text-hierarchy-1" >
							<p class="my-2">
								Soy un Ingeniero de Sistemas que disfruta del proceso de diseño y producción de aplicaciones y diseños para la web. 
								Considero que cada idea es una oportunidad para expandir y crear experiencias únicas y memorables.
							</p>
							<p class="my-2">
								Mis principios de diseño son tanto la apariencia y expresividad como la accesibilidad y usabilidad.
							</p>
						</div>
					</div>
				</div>

				<section class="p-2 my-4 mb-12 mx-auto max-w-[var(--max-width)] text-center md:text-right">
					<h3 class="font-semibold text-xl mb-4 leading-none">Mi <i>Stack</i></h3>
					<p class="my-4">
						Estas son las tecnologías que uso para convertir ideas en <span class="bg-gradient-to-tr from-purple-500 to-cyan-400 bg-clip-text text-transparent font-semibold">realidad</span>.
					</p>
					<IconList icons={Object.values(icons)} class:list={['p-3']}/>
				</section>

			</section>
		</Fragment>
	</Grid>
</Layout>

<style is:global>
	.c-timeline-experience {
		& {}

		& li[data-index="0"] .title { 
			background-image : linear-gradient(to bottom right,#5193ca,#27B887);
			background-clip: text;
			color: transparent;
		}
		& li[data-index="2"] .title { 
			/* background-image : linear-gradient(to bottom right,#5193ca,#27B887); */
			background-color: rgb(247, 185, 93);
			background-clip: text;
			color: transparent;
		}
		
		
	}

	ul.ul-tag-list-lite {
		& {
			display: flex;
			padding: 0;
			list-style: none;
			gap: .25rem;
		}

		& > li {
			line-height: 1;
			color: var(--hierarchy-s);	
			padding: .25rem;
			background-color: color-mix(in srgb, var(--icon-color), transparent 50%);
			
			border-radius: 100vw;
			font-size: small;

			display: flex;
			align-items: center;
		}
		& > li > svg {
			width: 16px;
			aspect-ratio: 1;
		}

		& > li > div {
			display: grid;
			transition: grid-template-columns .3s, padding-inline .3s;
			grid-template-columns: 0fr;
			overflow: hidden;
		}
		& > li:hover > div {
			grid-template-columns: 1fr;
			padding-inline: .25rem;
		}
		& > li > div > span {
			overflow: hidden;
			line-height: 1.25;
			text-transform: lowercase;
		}
	}

</style>